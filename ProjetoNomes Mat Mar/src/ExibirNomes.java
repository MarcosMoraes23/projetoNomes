
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Matheus
 */
public class ExibirNomes extends javax.swing.JFrame {

    /**
     * Creates new form ExibirNomes
     */
    public ExibirNomes() {
        initComponents();
        this.setLocationRelativeTo(null); 
        this.setResizable(false); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        painelNomes = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        painelSobrenome = new javax.swing.JTextPane();
        jLabel2 = new javax.swing.JLabel();
        carregaNomes = new javax.swing.JButton();
        limparListas = new javax.swing.JButton();
        concatena = new javax.swing.JButton();
        limpaArquivos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lista de exibição");
        setMaximumSize(new java.awt.Dimension(632, 507));
        setMinimumSize(new java.awt.Dimension(632, 507));

        painelNomes.setEditable(false);
        jScrollPane1.setViewportView(painelNomes);

        jLabel1.setText("Listagem Dos Nomes");

        painelSobrenome.setEditable(false);
        jScrollPane2.setViewportView(painelSobrenome);

        jLabel2.setText("Listagem Dos Sobrenomes");

        carregaNomes.setText("Carregar Listas");
        carregaNomes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carregaNomesActionPerformed(evt);
            }
        });

        limparListas.setText("Limpar Listas");
        limparListas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparListasActionPerformed(evt);
            }
        });

        concatena.setText("Concatenar");
        concatena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                concatenaActionPerformed(evt);
            }
        });

        limpaArquivos.setText("Limpar Arquivos De Listas");
        limpaArquivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpaArquivosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(concatena, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(carregaNomes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(limparListas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(limpaArquivos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(90, 90, 90))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(carregaNomes)
                        .addGap(18, 18, 18)
                        .addComponent(concatena)
                        .addGap(99, 99, 99)
                        .addComponent(limparListas)
                        .addGap(18, 18, 18)
                        .addComponent(limpaArquivos)))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void carregaNomesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carregaNomesActionPerformed
        
        File arquivo = new File("nomes.txt");
        
        try {
            
            FileReader ler = new FileReader(arquivo);
            BufferedReader carrega = new BufferedReader (ler);
            
                     
            String nome = "";
            String aux = "";
            
            while ((nome = carrega.readLine()) != null)
            {
                aux = aux + nome + "\n";
            }
            painelNomes.setText(aux);
            
            ler.close();
            carrega.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ExibirNomes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ExibirNomes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        arquivo = new File("sobrenomes.txt");
        
        try {
            
            FileReader ler = new FileReader(arquivo);
            BufferedReader carrega = new BufferedReader (ler);
            
                     
            String nome = "";
            String aux = "";
            
            while ((nome = carrega.readLine()) != null)
            {
                aux = aux + nome + "\n";
            }
            painelSobrenome.setText(aux);
            
            ler.close();
            carrega.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ExibirNomes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ExibirNomes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        JOptionPane.showMessageDialog(null, "Listas Carregadas Com Sucesso");
        
        
        
    }//GEN-LAST:event_carregaNomesActionPerformed

    private void limparListasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparListasActionPerformed
        painelNomes.setText("");
        painelSobrenome.setText("");
    }//GEN-LAST:event_limparListasActionPerformed

    private void concatenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_concatenaActionPerformed
        
        Concatenados concatenar = new Concatenados();
        
        File arquivo = new File("nomes.txt");
        File arquivo2 = new File("sobrenomes.txt");
        
        try {
            FileReader ler = new FileReader(arquivo);
            
            BufferedReader carrega = new BufferedReader(ler);
            
            String nome = "";
            String sobrenome = "";
            StringBuilder aux = new StringBuilder();
            
            File arquivo3 = new File("concatenados.txt");
            
            arquivo3.createNewFile();
            
            FileWriter fil = new FileWriter(arquivo3, true);
            BufferedWriter arq = new BufferedWriter(fil);
            
            while ((nome = carrega.readLine()) != null)
            {
              FileReader files = new FileReader(arquivo2);
              BufferedReader carregas = new BufferedReader(files);
              
                while((sobrenome = carregas.readLine()) != null)
                {
                        aux.append(nome.toUpperCase() + " " + sobrenome.toUpperCase() + "\n");
                        arq.write(nome.toUpperCase() + " " + sobrenome.toUpperCase());
                        arq.newLine();
                }
                
            }
            
            concatenar.painelConcatenados.setText(aux.toString());
            
            ler.close();
            carrega.close();
         
            arq.flush();
            arq.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ExibirNomes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ExibirNomes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        concatenar.setVisible(true);

    }//GEN-LAST:event_concatenaActionPerformed

    private void limpaArquivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpaArquivosActionPerformed
        
        File arquivo = new File ("nomes.txt");
       
        try {
           
            FileWriter escreve = new FileWriter(arquivo);
            BufferedWriter sobreescreve = new BufferedWriter(escreve);
            
            arquivo = new File("sobrenomes.txt");
            
            escreve = new FileWriter(arquivo);
            sobreescreve = new BufferedWriter(escreve);
            
            arquivo = new File("concatenados.txt");
            
            escreve = new FileWriter (arquivo);
            sobreescreve = new BufferedWriter (escreve);
           
        } catch (IOException ex) {
            Logger.getLogger(ExibirNomes.class.getName()).log(Level.SEVERE, null, ex);
        }

        painelNomes.setText("");
        painelSobrenome.setText("");
        
        JOptionPane.showMessageDialog(null, "Arquivos Limpos Com Sucesso");
        
        
    }//GEN-LAST:event_limpaArquivosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExibirNomes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExibirNomes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExibirNomes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExibirNomes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExibirNomes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton carregaNomes;
    private javax.swing.JButton concatena;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton limpaArquivos;
    private javax.swing.JButton limparListas;
    private javax.swing.JTextPane painelNomes;
    private javax.swing.JTextPane painelSobrenome;
    // End of variables declaration//GEN-END:variables

    private BufferedReader BufferedReader(FileReader ler) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
